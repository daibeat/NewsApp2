Index: app/src/main/java/com/example/android/newsapp/NewsAppActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.android.newsapp;\n\nimport android.app.LoaderManager;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.net.ConnectivityManager;\nimport android.net.NetworkInfo;\nimport android.net.Uri;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.AdapterView;\nimport android.widget.ListView;\nimport android.widget.TextView;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class NewsAppActivity extends AppCompatActivity {\n\n    /**\n     * URL for news data from the GUARDIAN dataset\n     */\n    private static final String GUARDIAN_REQUEST_URL =\n            \"https://content.guardianapis.com/search?q=debates&api-key=test\";\n\n    /**\n     * Constant value for the news loader ID. We can choose any integer.\n     * This really only comes into play if you're using multiple loaders.\n     */\n    private static final int GUARDIAN_LOADER_ID = 1;\n\n    /**\n     * Adapter for the list of news\n     */\n    private NewsAdapter mAdapter;\n\n    /** TextView that is displayed when the list is empty */\n    private TextView mEmptyStateTextView;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.news_activity);\n\n        // Find a reference to the {@link ListView} in the layout\n        ListView newsListView = (ListView) findViewById(R.id.list);\n\n        // Create a new adapter that takes an empty list of news as input\n        mAdapter = new NewsAdapter(this, new ArrayList<NewsApp>());\n\n        // Set the adapter on the {@link ListView}\n        // so the list can be populated in the user interface\n        newsListView.setAdapter(mAdapter);\n\n        mEmptyStateTextView = (TextView) findViewById(R.id.empty_view);\n        newsListView.setEmptyView(mEmptyStateTextView);\n\n\n        // Set an item click listener on the ListView, which sends an intent to a web browser\n        // to open a website with more information about the selected news.\n        newsListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            @Override\n            public void onItemClick(AdapterView<?> adapterView, View view, int position, long l) {\n                // Find the current new that was clicked on\n                NewsApp currentNews = mAdapter.getItem(position);\n\n                // Convert the String URL into a URI object (to pass into the Intent constructor)\n                Uri newsUri = Uri.parse(currentNews.getUrl());\n\n                // Create a new intent to view the news URI\n                Intent websiteIntent = new Intent(Intent.ACTION_VIEW, newsUri);\n\n                // Send the intent to launch a new activity\n                startActivity(websiteIntent);\n            }\n        });\n\n        // Get a reference to the ConnectivityManager to check state of network connectivity\n        ConnectivityManager connMgr = (ConnectivityManager)\n                getSystemService(Context.CONNECTIVITY_SERVICE);\n\n        // Get details on the currently active default data network\n        NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();\n\n        // If there is a network connection, fetch data\n        if (networkInfo != null && networkInfo.isConnected()) {\n            // Get a reference to the LoaderManager, in order to interact with loaders.\n            LoaderManager loaderManager = getLoaderManager();\n\n            // Initialize the loader. Pass in the int ID constant defined above and pass in null for\n            // the bundle. Pass in this activity for the LoaderCallbacks parameter (which is valid\n            // because this activity implements the LoaderCallbacks interface).\n            loaderManager.initLoader(GUARDIAN_LOADER_ID, null, this);\n        } else {\n            // Otherwise, display error\n            // First, hide loading indicator so error message will be visible\n            View loadingIndicator = findViewById(R.id.loading_spinner);\n            loadingIndicator.setVisibility(View.GONE);\n\n            // Update empty state with no connection error message\n            mEmptyStateTextView.setText(\"no internet connection\");\n        }\n    }\n\n    @Override\n    public Loader<List<NewsApp>> onCreateLoader(int i, Bundle bundle) {\n        // Create a new loader for the given URL\n        return new NewsLoader(this, GUARDIAN_REQUEST_URL);\n    }\n\n    @Override\n    public void onLoadFinished(Loader<List<NewsApp>> loader, List<NewsApp> news) {\n\n        // Set empty state text to display \"No news found.\"\n        mEmptyStateTextView.setText(\"no news found\");\n\n        // Clear the adapter of previous news data\n        mAdapter.clear();\n\n        // If there is a valid list of {@link NewsApp}s, then add them to the adapter's\n        // data set. This will trigger the ListView to update.\n        if (news != null && !news.isEmpty()) {\n            mAdapter.addAll(news);\n        }\n    }\n\n    @Override\n    public void onLoaderReset(Loader<List<NewsApp>> loader) {\n        // Loader reset, so we can clear out our existing data.\n        mAdapter.clear();\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/android/newsapp/NewsAppActivity.java	(revision 94846dc38be0f40ad77d7aab9f4e1cf581185ad2)
+++ app/src/main/java/com/example/android/newsapp/NewsAppActivity.java	(date 1528721488601)
@@ -1,11 +1,14 @@
 package com.example.android.newsapp;
 
-import android.app.LoaderManager;
 import android.content.Context;
 import android.content.Intent;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 import android.net.Uri;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.app.LoaderManager;
+import android.support.v4.content.Loader;
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
 import android.view.View;
@@ -14,9 +17,7 @@
 import android.widget.TextView;
 
 import java.util.ArrayList;
-import java.util.List;
-
-public class NewsAppActivity extends AppCompatActivity {
+public class NewsAppActivity extends AppCompatActivity implements LoaderManager.LoaderCallbacks {
 
     /**
      * URL for news data from the GUARDIAN dataset
@@ -86,7 +87,7 @@
         // If there is a network connection, fetch data
         if (networkInfo != null && networkInfo.isConnected()) {
             // Get a reference to the LoaderManager, in order to interact with loaders.
-            LoaderManager loaderManager = getLoaderManager();
+            LoaderManager loaderManager = getSupportLoaderManager();
 
             // Initialize the loader. Pass in the int ID constant defined above and pass in null for
             // the bundle. Pass in this activity for the LoaderCallbacks parameter (which is valid
@@ -103,33 +104,23 @@
         }
     }
 
+
+    @NonNull
     @Override
-    public Loader<List<NewsApp>> onCreateLoader(int i, Bundle bundle) {
-        // Create a new loader for the given URL
-        return new NewsLoader(this, GUARDIAN_REQUEST_URL);
+    public Loader onCreateLoader(int id, @Nullable Bundle args) {
+        return null;
     }
 
     @Override
-    public void onLoadFinished(Loader<List<NewsApp>> loader, List<NewsApp> news) {
-
-        // Set empty state text to display "No news found."
-        mEmptyStateTextView.setText("no news found");
+    public void onLoadFinished(@NonNull Loader loader, Object data) {
 
-        // Clear the adapter of previous news data
-        mAdapter.clear();
-
-        // If there is a valid list of {@link NewsApp}s, then add them to the adapter's
-        // data set. This will trigger the ListView to update.
-        if (news != null && !news.isEmpty()) {
-            mAdapter.addAll(news);
-        }
     }
 
     @Override
-    public void onLoaderReset(Loader<List<NewsApp>> loader) {
-        // Loader reset, so we can clear out our existing data.
-        mAdapter.clear();
+    public void onLoaderReset(@NonNull Loader loader) {
+
     }
+
 }
 
 
